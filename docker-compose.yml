version: '3.8'

services:
  # Databases
  mongodb-users:
    image: mongo:7.0
    container_name: mongodb-users
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: users_db
    volumes:
      - mongodb_users_data:/data/db
    networks:
      - microservices-network

  mongodb-auth:
    image: mongo:7.0
    container_name: mongodb-auth
    restart: unless-stopped
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: auth_db
    volumes:
      - mongodb_auth_data:/data/db
    networks:
      - microservices-network

  mongodb-ai:
    image: mongo:7.0
    container_name: mongodb-ai
    restart: unless-stopped
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ai_db
    volumes:
      - mongodb_ai_data:/data/db
    networks:
      - microservices-network

  mongodb-media:
    image: mongo:7.0
    container_name: mongodb-media
    restart: unless-stopped
    ports:
      - "27020:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: media_db
    volumes:
      - mongodb_media_data:/data/db
    networks:
      - microservices-network

  mongodb-notification:
    image: mongo:7.0
    container_name: mongodb-notification
    restart: unless-stopped
    ports:
      - "27021:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: notification_db
    volumes:
      - mongodb_notification_data:/data/db
    networks:
      - microservices-network

  # Redis for caching and session management
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis_data:/data
    networks:
      - microservices-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - microservices-network

  # Message Broker (NATS)
  nats:
    image: nats:2.10-alpine
    container_name: nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      - redis
      - nats
    networks:
      - microservices-network
    volumes:
      - ./apps/api-gateway:/app
      - /app/node_modules

  # Users Service
  users-service:
    build:
      context: .
      dockerfile: apps/users-service/Dockerfile
    container_name: users-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URL=mongodb://admin:password@mongodb-users:27017/users_db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      - mongodb-users
      - redis
      - nats
    networks:
      - microservices-network
    volumes:
      - ./apps/users-service:/app
      - /app/node_modules

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
    container_name: auth-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URL=mongodb://admin:password@mongodb-auth:27017/auth_db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - JWT_SECRET=your-super-secret-jwt-key
    depends_on:
      - mongodb-auth
      - redis
      - nats
    networks:
      - microservices-network
    volumes:
      - ./apps/auth-service:/app
      - /app/node_modules

  # AI Service
  ai-service:
    build:
      context: .
      dockerfile: apps/ai-service/Dockerfile
    container_name: ai-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URL=mongodb://admin:password@mongodb-ai:27017/ai_db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - TOGETHER_AI_API_KEY=${TOGETHER_AI_API_KEY}
    depends_on:
      - mongodb-ai
      - redis
      - nats
      - qdrant
    networks:
      - microservices-network
    volumes:
      - ./apps/ai-service:/app
      - /app/node_modules

  # Media Service
  media-service:
    build:
      context: .
      dockerfile: apps/media-service/Dockerfile
    container_name: media-service
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - MONGODB_URL=mongodb://admin:password@mongodb-media:27017/media_db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      - mongodb-media
      - redis
      - nats
    networks:
      - microservices-network
    volumes:
      - ./apps/media-service:/app
      - /app/node_modules

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: apps/notification-service/Dockerfile
    container_name: notification-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - MONGODB_URL=mongodb://admin:password@mongodb-notification:27017/notification_db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
    depends_on:
      - mongodb-notification
      - redis
      - nats
    networks:
      - microservices-network
    volumes:
      - ./apps/notification-service:/app
      - /app/node_modules

volumes:
  mongodb_users_data:
  mongodb_auth_data:
  mongodb_ai_data:
  mongodb_media_data:
  mongodb_notification_data:
  redis_data:
  qdrant_data:

networks:
  microservices-network:
    driver: bridge
